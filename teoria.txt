-Classe (descreve)
	Engloba listagem de atributos e apartir dela que s√£o moldados os objetos
        Ex: celular

-Objetos (caracter√≠sticas pr√≥prias, funcionalidades pr√≥prias e um escopo muito bem definido, e o 
            tipo dele ser√° definido a partir da classe que ele ser√° instanciado)
	Elemento do mundo real para o mundo da programa√ß√£o
        Ex: Iphone

-Atributos
    S√£o as caracter√≠sticas do objeto
        Ex: Marca, Ano, Valor,Cor, mem√≥ria

-M√©todo
    O Que esse objeto faz, suas a√ß√µes/funcionalidades
        Ex: Liga, desliga..

-Instancia√ß√£o
    Cria√ß√£o de um objeto apartir de uma classe


S√≥ que podemos nos deparar com a seguinte quest√£o: e se eu quise criar um objeto com outros atributos
que n√£o tem na minha classe atual? N√£o seria legal modificar a classe atual porque isso poderia 
influenciar no comportamento de outros objetos que foram construidos apartir dos atributos listados nela..ü§î
agora entra um novo conceito...

   -Heran√ßa
Ela te permite criar uma classe apartir de outra classe(j√° criada) herdando seus atributos e m√©todos 
e adicionando novos


 - Polimorfismo
Capacidade do objeto assumir formas diferentes em contextos diferentes, ser tratado diferente a partir de contextos diferentes que eu estabele√ßo em meu c√≥digo .
Fazemos isso por meio de classes abstratas e interfaces.

O que √© uma classe abstrata?
R:Esqueleto, escopo de uma classe. A classe que herdar dessa classe abstrata poder√° ser instanciada, ou seja, a partir dela ser√° possivel a instancia√ß√£o

O que √© uma interface?
R:√â um tipo de classe abstrata por√©m ela s√≥ ter√° os m√©todos/atributos abtratos ou seja, apenas o esqueleto sem implementa√ß√£o.



 - Encapsulamento 
Cria√ß√£o de uma prote√ß√£o/pad√£o, sendo que, este detemina que o comportamento desse o objeto ser√° sempre
o mesmo. Observa-se que, uma vez que este objeto esteja protegido ele n√£o poder√° ser acessado, por√©m a troca de 
informa√ß√µes com ele pode ser feita por meio de uma interface. 


 - Abstra√ß√£o(uma classe mais simples que se concentra apenas no prop√≥sito do c√≥digo)
Objetivo de aproximar o mundo real do mundo da programa√ß√£o, simplificar um problema. Esse processo se concentra apenas 
nas informa√ß√£oes que s√£o importantes para o seu prop√≥sito, mantendo o escopo da classe simplificada, ou seja , se concentra
no que √© importante para um determinada finalidade.


